{
  /*
	 // Place your snippets for TypeScript here. Each snippet is defined under a snippet name and has a prefix, body and
	 // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	 // $1, $2 for tab stops, ${id} and ${id:label} and ${1:label} for variables. Variables with the same id are connected.
	 // Example:
	 "Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
  "Redoodle Action": {
    "prefix": "redoodleaction",
    "body": [
      "export const ${1:action} = createActionType<$2>(`${0:\\${ACTION_PREFIX}}/${1:action}`);",
      "export const ${3:$1} = createActionCreator(${1:action});"
    ]
  },
  "Redoodle Reducer": {
    "prefix": "redoodlereducer",
    "body": [
      "import { newTypedReducer, assign } from '@acme/redoodle';",
      "",
      "export interface ${1:State} {",
      "  $0",
      "}",
      "",
      "const EMPTY_STATE: $1 = {",
      "  ",
      "};",
      "",
      "export const reduce$1 = newTypedReducer<$1>()",
      "  .handleDefault((state = EMPTY_STATE) => state)",
      "  .build();"
    ]
  },
  "Redoodle handlePayload": {
    "prefix": "handlePayload",
    "body": [
      ".handlePayload($1, (state, payload) => assign({}, state, {",
      "  $0",
      "}))"
    ]
  }
}
